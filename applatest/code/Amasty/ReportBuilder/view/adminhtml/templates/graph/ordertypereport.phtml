<?php
  $ordersData = $block->getOrderCollection();
  $ordersByQtyData = $block->getOrderByQtyCollection();
  //echo "<pre>";print_r($ordersData);print_r($ordersByQtyData);echo "</pre>";
?>

<form method="GET" action="">

            <div class="row">
                
                    <div class="column-half">
                        <div class="input-box" style="clear: both;">
                            <div class="search-box">
                                <input type="text" name="color" style="width:186px" id="color" autocomplete="off" placeholder="enter rgb code" class="input-text required-entry">
                                <i class="fa fa-plus add_fields"></i>
                                <div class="result"></div>
                            </div>
                        </div>

                    </div>
                
                <div class="column-half" style="width: 40%; display: flex;">
                    <button class="btn btn-primary" name="submit" type="submit"><span class="glyphicon glyphicon-search"></span> Submit</button>

                </div>
            </div>        

</form>

<script>
    requirejs(['jquery', 'amcharts'], function($, amcharts) {
        am4core.ready(function() {

            // Themes begin
            am4core.useTheme(am4themes_animated);
            // Themes end

            // Create chart instance
            var chart = am4core.create("inventory-report-column-chart", am4charts.XYChart);
            chart.scrollbarX = new am4core.Scrollbar();

            // Add data
            chart.data = [];
            <?php
            foreach ($ordersData as $type => $total) {
            ?>
                chart.data.push({
                    x_axes: "<?= $type ?>",
                    value: <?= $total ?>
                });
            <?php
            }
            ?>

             var selectedColor = getColorCode();
             var selColor = "#" + selectedColor;
             var newcolorArr = [];
             var colorsArr = selectedColor.split(',');
             var arrayLength = colorsArr.length;
             for (var i = 0; i < arrayLength; i++) {
                newcolorArr.push("#"+colorsArr[i]);
             }

            // Create axes
            var categoryAxis = chart.xAxes.push(new am4charts.CategoryAxis());
            categoryAxis.dataFields.category = "x_axes";
            categoryAxis.renderer.grid.template.location = 0;
            categoryAxis.renderer.minGridDistance = 30;
            categoryAxis.renderer.labels.template.horizontalCenter = "right";
            categoryAxis.renderer.labels.template.verticalCenter = "middle";
            categoryAxis.renderer.labels.template.rotation = 270;
            categoryAxis.tooltip.disabled = true;
            categoryAxis.renderer.minHeight = 110;

            var valueAxis = chart.yAxes.push(new am4charts.ValueAxis());
            valueAxis.renderer.minWidth = 50;

            // Create series
            var series = chart.series.push(new am4charts.ColumnSeries());
            series.sequencedInterpolation = true;
            series.dataFields.valueY = "value";
            series.dataFields.categoryX = "x_axes";
            series.tooltipText = "[{categoryX}: bold]{valueY}[/]";
            series.columns.template.strokeWidth = 0;

            series.tooltip.pointerOrientation = "vertical";

            series.columns.template.column.cornerRadiusTopLeft = 10;
            series.columns.template.column.cornerRadiusTopRight = 10;
            series.columns.template.column.fillOpacity = 0.8;

            // on hover, make corner radiuses bigger
            var hoverState = series.columns.template.column.states.create("hover");
            hoverState.properties.cornerRadiusTopLeft = 0;
            hoverState.properties.cornerRadiusTopRight = 0;
            hoverState.properties.fillOpacity = 1;

            chart.colors.list = [
                am4core.color("#443321"),    
                am4core.color("#2776BD"),
                am4core.color("#00A1D0"),
                am4core.color("#00C195"),
                am4core.color("#7ED321"),
                am4core.color("#A8C600"),
                am4core.color("#C9B600"),
                am4core.color("#E3A600"),
                am4core.color("#F7941E"),
                am4core.color(selColor)
            ];

            series.columns.template.adapter.add("fill", function(fill, target) {
                if(selectedColor) {
                    //return chart.colors.getIndex(9);
                    return newcolorArr[target.dataItem.index];
                } else {
                    return chart.colors.getIndex(target.dataItem.index);
                }
            });

            // Cursor
            chart.cursor = new am4charts.XYCursor();


             // Themes begin
        am4core.useTheme(am4themes_animated);
            // Themes end

            // Create chart instance
            var qtyChart = am4core.create("inventory-report-qty-chart", am4charts.XYChart);
            qtyChart.scrollbarX = new am4core.Scrollbar();

            // Add data
            qtyChart.data = [];
            <?php
            foreach ($ordersByQtyData as $type => $total) {
            ?>
                qtyChart.data.push({
                    x_axes: "<?= $type ?>",
                    value: <?= $total ?>
                });
            <?php
            }
            ?>

             var selectedColor = getColorCode();
             var selColor = "#" + selectedColor;
             var newcolorArr = [];
             var colorsArr = selectedColor.split(',');
             var arrayLength = colorsArr.length;
             for (var i = 0; i < arrayLength; i++) {
                newcolorArr.push("#"+colorsArr[i]);
             }

            // Create axes
            var categoryAxis = qtyChart.xAxes.push(new am4charts.CategoryAxis());
            categoryAxis.dataFields.category = "x_axes";
            categoryAxis.renderer.grid.template.location = 0;
            categoryAxis.renderer.minGridDistance = 30;
            categoryAxis.renderer.labels.template.horizontalCenter = "right";
            categoryAxis.renderer.labels.template.verticalCenter = "middle";
            categoryAxis.renderer.labels.template.rotation = 270;
            categoryAxis.tooltip.disabled = true;
            categoryAxis.renderer.minHeight = 110;

            var valueAxis = qtyChart.yAxes.push(new am4charts.ValueAxis());
            valueAxis.renderer.minWidth = 50;

            // Create series
            var series = qtyChart.series.push(new am4charts.ColumnSeries());
            series.sequencedInterpolation = true;
            series.dataFields.valueY = "value";
            series.dataFields.categoryX = "x_axes";
            series.tooltipText = "[{categoryX}: bold]{valueY}[/]";
            series.columns.template.strokeWidth = 0;

            series.tooltip.pointerOrientation = "vertical";

            series.columns.template.column.cornerRadiusTopLeft = 10;
            series.columns.template.column.cornerRadiusTopRight = 10;
            series.columns.template.column.fillOpacity = 0.8;

            // on hover, make corner radiuses bigger
            var hoverState = series.columns.template.column.states.create("hover");
            hoverState.properties.cornerRadiusTopLeft = 0;
            hoverState.properties.cornerRadiusTopRight = 0;
            hoverState.properties.fillOpacity = 1;

            qtyChart.colors.list = [
                am4core.color("#443321"),    
                am4core.color("#2776BD"),
                am4core.color("#00A1D0"),
                am4core.color("#00C195"),
                am4core.color("#7ED321"),
                am4core.color("#A8C600"),
                am4core.color("#C9B600"),
                am4core.color("#E3A600"),
                am4core.color("#F7941E"),
                am4core.color(selColor)
            ];

            series.columns.template.adapter.add("fill", function(fill, target) {
                if(selectedColor) {
                    //return qtyChart.colors.getIndex(9);
                    return newcolorArr[target.dataItem.index];
                } else {
                    return qtyChart.colors.getIndex(target.dataItem.index);
                }
            });

            // Cursor
            qtyChart.cursor = new am4charts.XYCursor();

        }); // end am4core.ready()
       
    });
    function getColorCode() {
        // alert('In Function');
        const queryString = window.location.search;
        const urlParams = new URLSearchParams(queryString);
        if (urlParams.has('color')) {
            const color = urlParams.get('color');
            return color;
        } else {
            return '';
        }
        //alert(color);
    }
</script>
<style>
    #inventory-report-column-chart {
        width: 100%;
        height: 500px;
    }

    #inventory-report-qty-chart {
        width: 100%;
        height: 500px;
    }
</style>
<div>
    <h2>Order Type</h2>
</div>
<div id="inventory-report-column-chart"></div>
<hr>
<div>
    <h2>Order Type - Quantity</h2>
</div>
<div id="inventory-report-qty-chart"></div>
